{"version":3,"sources":["components/Pellet.js","components/Tower.js","components/Board.js","components/Instruction.js","components/Game.js","App.js","serviceWorker.js","index.js"],"names":["Pellet","props","react_default","a","createElement","className","size","towerSize","clicked","ghost","invalid","onClick","Tower","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","i","_this","includes","length","clickedId","handleClick","isInvalid","_this2","tmp","map","id","renderPellet","renderPlacable","idTower","number","onPelletClick","Component","nbPellet","nbTower","win","towers","tower","Math","min","toConsumableArray","fillTower","arr","Array","x","Board","call","state","clickedIdTower","clickedIdPellet","nbClick","loader","console","dir","timerID","setInterval","tick","clearInterval","_this3","Tower_Tower","idPellet","handlePelletClick","slice","splice","index","indexOf","setState","save","renderTower","renderLoader","loaderId","max","timer","Instruction","Game","instruction","start","type","click","xhttp","XMLHttpRequest","open","send","renderBoard","Instruction_Instruction","floor","random","Board_Board","App","theme","Game_Game","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.361ceffc.chunk.js","sourcesContent":["import React from \"react\";\n\nexport function Pellet(props) {\n        return (\n            <button className={\"pellet pellet-\"+props.size+\" tower-\"+props.towerSize+(props.clicked?\" clicked\":\"\")+(props.ghost?\" ghost\":\"\")+(props.invalid?\" invalid\":\"\")} onClick={props.onClick}>\n                {props.size}\n                </button>\n        )\n}","import React,{Component} from \"react\";\nimport {Pellet} from \"./Pellet\";\nimport {isInvalid} from \"./Board\";\n\nexport class Tower extends Component {\n\n    renderPellet(i) {\n        if (this.props.value.includes(i))\n            return <Pellet size={i} towerSize={this.props.value.length} clicked={this.props.clickedId===i} onClick={() => this.handleClick(i)}/>\n        else\n            return null\n    }\n\n    renderPlacable(i) {\n        if (!this.props.clicked && i!==null)\n            return <Pellet size={i} towerSize={this.props.value.length + 1} clicked={false} ghost={true} invalid={isInvalid(i, this.props.value)} />\n        else\n            return null\n    }\n\n    render() {\n        var tmp = this.props.value.map((id)=>{return this.renderPellet(id)});\n        return(\n            <div className=\"tower\" onClick={() => this.props.onClick()}>\n                {this.renderPlacable(this.props.clickedId)}\n                {tmp}\n                <div className=\"tower-name\">Tour {this.props.idTower}</div>\n            </div>\n        )\n    }\n\n    handleClick(number) {\n     //   }if (!this.props.win && number === Math.min(...this.props.value) && !this.props.placable){\n        this.props.onPelletClick(number)\n    }\n\n}","import React,{Component} from \"react\";\nimport {Tower} from \"./Tower\";\n\nconst nbPellet = 4;\nconst nbTower = 3;\n\nexport function win(towers) {\n    return (towers && towers.length === nbPellet);\n}\n\nexport function isInvalid(i, tower) {\n    return tower.length > 0 && i > Math.min(...tower);\n}\n\nfunction fillTower(nbTower, nbPellet) {\n    var arr = Array.apply(null, Array(nbTower));\n    arr = arr.map((x,i)=>{return []});\n    arr[0] = Array.apply(null, Array(nbPellet));\n    arr[0] = arr[0].map((x,i)=>{return i});\n    return arr;\n}\n\nexport class Board extends Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            towers: fillTower(nbTower, nbPellet),\n            clickedIdTower: null,\n            clickedIdPellet: null,\n            nbClick: 0,\n            loader: null\n        };\n        console.dir(this.state.towers);\n        fillTower(nbTower, nbPellet);\n    }\n\n    componentDidMount() {\n        this.timerID = setInterval(\n            () => this.tick(),\n            100\n        )\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.timerID);\n    }\n\n    renderTower(i) {\n        return <Tower idTower={i} value={this.state.towers[i]}\n                      clicked={this.state.clickedIdTower!==null && this.state.clickedIdTower === i}\n                      clickedId={this.state.clickedIdPellet}\n                      win={win(this.state.towers[nbTower-1])}\n                      onPelletClick={(idPellet) => this.handlePelletClick(i, idPellet)}\n                      onClick={() => this.handleClick(i)}/>\n    }\n\n    handleClick(i) {\n        if (this.state.clickedIdPellet!==null) {\n            const tower = this.state.towers.slice();\n            if (!isInvalid(this.state.clickedIdPellet, tower[i])) {\n                tower[i].splice(0,0,this.state.clickedIdPellet);\n                const index = tower[this.state.clickedIdTower].indexOf(this.state.clickedIdPellet);\n                tower[this.state.clickedIdTower].splice(index,1);\n                this.setState({towers: tower, clickedIdTower: null, clickedIdPellet: null});\n                if(i !== this.state.clickedIdTower) {\n                    this.setState((state, props) => ({nbClick: state.nbClick + 1, loader:0}));\n                    if (win(this.state.towers[nbTower-1])) this.props.save(this.state.nbClick+1)\n                }\n            }\n        }\n    }\n\n    handlePelletClick(idTower, idPellet) {\n        if (this.state.clickedIdTower!==null && this.state.clickedIdTower===idTower && this.state.clickedIdPellet!==null && this.state.clickedIdPellet===idPellet)\n            //On selectionne celui déjà séléctionné\n            this.setState({clickedIdTower: null, clickedIdPellet: null});\n        else if (this.state.loader === null && this.state.clickedIdPellet ===null && !win(this.state.towers[nbTower -1]) && idPellet === Math.min(...this.state.towers[idTower])){\n            //Si on a pas déjà séléctionné quelque chose && on a pas gagné && on séléctionne le plus petit\n            this.setState({clickedIdTower: idTower, clickedIdPellet: idPellet})\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"board container\">\n                <div>Déplacement(s) = {this.state.nbClick}</div>\n                {win(this.state.towers[nbTower -1])?<div>Congratulation !</div>:\"\"}\n                {this.renderTower(0)}\n                {this.renderTower(1)}\n                {this.renderTower(2)}\n                {this.state.loader!==null?this.renderLoader(this.props.loaderId):\"\"}\n            </div>\n        );\n    }\n\n    renderLoader(i) {\n        if (i === -1){ return null; }\n        else if (i === 0){ return <div className=\"important\">Sauvegarde ...</div>; }\n        else { return <div>Sauvegarde <progress value={this.state.loader} max=\"100\">{this.state.loader}</progress></div>}\n    }\n\n    tick() {\n        if (this.state.loader >= 100 || this.props.loaderId === -1)\n            this.setState({loader: null});\n        if (this.state.loader !== null)\n            this.setState((state, props)=>({loader: state.loader + (10/props.timer)}))\n    }\n}","import React, {Component} from \"react\";\n\nexport class Instruction extends Component{\n    render() {\n        return (\n            <div className=\"instruction container\">\n                <h2>Règle du jeu</h2>\n                <br/>\n                <p>Le but du jeu est de déplacer entièrement la pile initiale sur la dernière tour.\n                    <ul>\n                        <li>Vous ne pouvez bouger qu’un disque à la fois</li>\n                        <li>Seul un petit disque peut être placé sur un plus gros disque (un peu comme des poupées russes)</li>\n                    </ul>\n                </p>\n                <br/>\n                <h2>Objectif</h2>\n                <br/>\n                <p>Vous devez finir le jeu en réalisant le moins de déplacements possible</p>\n                <br/>\n                <a onClick={() => this.props.onClick()} className=\"btn\">Démarrer</a>\n            </div>\n        );\n    }\n}","import React,{Component} from 'react'\nimport {Board} from \"./Board\";\nimport {Instruction} from \"./Instruction\";\n\nexport class Game extends Component{\n\n    save(type, click) {\n        var xhttp = new XMLHttpRequest();\n        xhttp.open(\"GET\", \"https://unrepented-apportio.000webhostapp.com/saver.php?type=\"+type+\"&click=\"+click, true);\n        xhttp.send();\n    }\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            instruction: true,\n            start: false\n        }\n    }\n\n    render() {\n        return(\n            <div className=\"Game\">\n                <div className=\"game-board\">\n                    {this.renderBoard()}\n                    {this.state.instruction?<Instruction onClick={() => this.handleClick()}/>:null}\n                </div>\n            </div>\n        )\n    }\n\n    handleClick() {\n        this.setState({instruction: false, start: true})\n    }\n\n    renderBoard() {\n        if (this.state.start) {\n            const id = Math.floor((Math.random()*3) +1) -2;\n            return <Board loaderId={id} timer={2} save={(click) => this.save(id, click)}/>\n        }\n        return null;\n    }\n}","import React, { Component } from 'react';\nimport './App.css';\nimport {Game} from \"./components/Game\";\n\nclass App extends Component {\n\n  render() {\n    return (\n      <div className={\"App\" + \" \" + this.props.theme}>\n          <h1>Tours de Hano&iuml;</h1>\n          <Game/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/main.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App theme=\"light\"/>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}